name: CI

on:
  push:
    branches: ["main"]
    paths-ignore:
      - "**.md"
      - "docs/**"
      - ".gitignore"
      - "Makefile"
      - ".prettierrc"
  pull_request:
    branches: ["main"]
    paths-ignore:
      - "**.md"
      - "docs/**"
      - ".gitignore"
      - "Makefile"
      - ".prettierrc"

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          export PATH="$HOME/.local/bin:$PATH"

      - name: Install dependencies
        run: |
          uv venv
          # Install both main and dev dependencies
          uv pip install -e ".[dev]"
          # Activate the virtual environment and verify installation
          source .venv/bin/activate
          python -c "import sys; print(f'Path: {sys.path}'); import black; print(f'Black version: {black.__version__}')"

      - name: Run tests with coverage
        run: |
          source .venv/bin/activate
          pytest --cov=gac --cov-report=xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: cellwebb/gac

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          uv venv
          # Install both main and dev dependencies
          uv pip install -e ".[dev]"
          # Activate the virtual environment and verify installation
          source .venv/bin/activate
          python -c "import sys; print(f'Path: {sys.path}'); import black; print(f'Black version: {black.__version__}')"
          npm install -g markdownlint-cli2 prettier

      - name: Run black
        run: |
          source .venv/bin/activate
          black --check .

      - name: Run isort
        run: |
          source .venv/bin/activate
          isort --check .

      - name: Run flake8
        run: |
          source .venv/bin/activate
          flake8 src

      - name: Run prettier
        run: |
          prettier --check "**/*.{md,yaml,yml,json}"

      - name: Run markdownlint
        run: |
          markdownlint-cli2 --config .markdownlint-cli2.yaml "**/*.md"
