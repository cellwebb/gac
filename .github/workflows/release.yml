name: Nightly Release

on:
  workflow_dispatch: # Allow manual triggering
  schedule:
    - cron: "0 */4 * * *" # Run every 4 hours to check for idle time

# Add permissions at workflow level
permissions:
  contents: write # Required for creating GitHub releases
  packages: write # Required for publishing packages

jobs:
  check-for-changes:
    runs-on: ubuntu-latest
    outputs:
      should_release: ${{ steps.check_changes.outputs.should_release }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Need full history for checking commits

      - name: Check for changes since last nightly release
        id: check_changes
        run: |
          # Get the timestamp of the most recent nightly release tag
          LAST_NIGHTLY_TAG=$(git tag -l 'nightly-*' | sort -V | tail -n 1)

          if [ -z "$LAST_NIGHTLY_TAG" ]; then
            # No previous nightly release, so release
            echo "No previous nightly release found"
            echo "should_release=true" >> $GITHUB_OUTPUT
          else
            # Get the commit timestamp of the last nightly release
            LAST_NIGHTLY_COMMIT=$(git log -1 --format=%ct "$LAST_NIGHTLY_TAG")
            
            # Get the timestamp of the most recent commit after the last nightly release
            LATEST_COMMIT_TIMESTAMP=$(git log -1 --after="$LAST_NIGHTLY_COMMIT" --format=%ct)
            
            if [ -n "$LATEST_COMMIT_TIMESTAMP" ]; then
              echo "Changes detected since last nightly release"
              echo "should_release=true" >> $GITHUB_OUTPUT
            else
              echo "No changes since last nightly release"
              echo "should_release=false" >> $GITHUB_OUTPUT
            fi
          fi

  nightly-release:
    needs: check-for-changes
    if: needs.check-for-changes.outputs.should_release == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Create nightly release tag
        run: |
          TODAY=$(date +"%Y%m%d-%H%M%S")
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag "nightly-$TODAY"
          git push origin "nightly-$TODAY"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: nightly-${{ github.ref_name }}-${{ github.sha }}
          name: Nightly Release ${{ github.ref_name }} (${{ github.sha }})
          prerelease: true
