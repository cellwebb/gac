[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "gac"
dynamic = ["version"]
description = 'git auto commit'
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = []
authors = [
  { name = "cellwebb", email = "cellwebb@users.noreply.github.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
    "aisuite",
    "anthropic",
    "click",
    "python-dotenv",
    "rich",
]

[project.optional-dependencies]
dev = [
    "black",
    "isort",
    "pytest",
    "pytest-cov",
    "codecov",
    "flake8",
]


[project.urls]
Documentation = "https://github.com/cellwebb/gac#readme"
Issues = "https://github.com/cellwebb/gac/issues"
Source = "https://github.com/cellwebb/gac"

[tool.coverage.run]
source_pkgs = ["gac", "tests"]
branch = true
parallel = true
omit = [
  "src/gac/__about__.py",
]

[tool.coverage.paths]
gac = ["src/gac", "*/gac/src/gac"]
tests = ["tests", "*/gac/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build]
only-packages = true
skip-excluded = true

[tool.hatch.build.targets.wheel]
packages = ["src/gac"]

[tool.hatch.build.targets.sdist]
exclude = [
    "/.github",
    "/docs",
    "tests/",
    "*.tests",
    "*.tests.*",
]

[tool.hatch.envs.default]
dependencies = [
    # Runtime dependencies inherited from project.dependencies
    # Development dependencies
    "black",
    "isort",
    "pytest",
    "pytest-cov",
    "codecov",
    "flake8",
]

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "pytest --cov {args:tests}"
lint = [
    "black .",
    "isort .",
    "flake8 .",
]
format = [
    "black .",
    "isort .",
]

[tool.hatch.env]
path = "venv"

[template.plugins.default]
tests = true
src-layout = true
